{"version":3,"file":"ngxs-form-plugin.umd.js","sources":["../../../../packages/form-plugin/src/actions.ts","../../../../packages/form-plugin/src/form.plugin.ts","../../../../packages/form-plugin/src/directive.ts","../../../../packages/form-plugin/src/form.module.ts"],"sourcesContent":["export class UpdateFormStatus {\n  static get type() {\n    // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\n    return '[Forms] Update Form Status';\n  }\n  constructor(\n    public payload: {\n      status: string | null;\n      path: string;\n    }\n  ) {}\n}\n\nexport class UpdateFormValue {\n  static get type() {\n    // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\n    return '[Forms] Update Form Value';\n  }\n  constructor(public payload: { value: any; path: string; propertyPath?: string }) {}\n}\n\nexport class UpdateForm {\n  static get type() {\n    // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\n    return '[Forms] Update Form';\n  }\n  constructor(\n    public payload: {\n      value: any;\n      errors: { [k: string]: string } | null;\n      dirty: boolean | null;\n      status: string | null;\n      path: string;\n    }\n  ) {}\n}\n\nexport class UpdateFormDirty {\n  static get type() {\n    // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\n    return '[Forms] Update Form Dirty';\n  }\n  constructor(public payload: { dirty: boolean | null; path: string }) {}\n}\n\nexport class SetFormDirty {\n  static get type() {\n    // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\n    return '[Forms] Set Form Dirty';\n  }\n  constructor(public payload: string) {}\n}\n\nexport class SetFormPristine {\n  static get type() {\n    // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\n    return '[Forms] Set Form Pristine';\n  }\n  constructor(public payload: string) {}\n}\n\nexport class UpdateFormErrors {\n  static get type() {\n    // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\n    return '[Forms] Update Form Errors';\n  }\n  constructor(public payload: { errors: { [k: string]: string } | null; path: string }) {}\n}\n\nexport class SetFormDisabled {\n  static get type() {\n    // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\n    return '[Forms] Set Form Disabled';\n  }\n  constructor(public payload: string) {}\n}\n\nexport class SetFormEnabled {\n  static get type() {\n    // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\n    return '[Forms] Set Form Enabled';\n  }\n  constructor(public payload: string) {}\n}\n\nexport class ResetForm {\n  static get type() {\n    // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\n    return '[Forms] Reset Form';\n  }\n  constructor(public payload: { path: string; value?: any }) {}\n}\n","import { Injectable } from '@angular/core';\nimport {\n  getActionTypeFromInstance,\n  getValue,\n  NgxsNextPluginFn,\n  NgxsPlugin,\n  setValue\n} from '@ngxs/store';\nimport {\n  ResetForm,\n  SetFormDirty,\n  SetFormDisabled,\n  SetFormEnabled,\n  SetFormPristine,\n  UpdateForm,\n  UpdateFormDirty,\n  UpdateFormErrors,\n  UpdateFormStatus,\n  UpdateFormValue\n} from './actions';\n\n@Injectable()\nexport class NgxsFormPlugin implements NgxsPlugin {\n  handle(state: any, event: any, next: NgxsNextPluginFn) {\n    const type = getActionTypeFromInstance(event);\n\n    let nextState = state;\n\n    if (type === UpdateFormValue.type || type === UpdateForm.type || type === ResetForm.type) {\n      const { value } = event.payload;\n      const payloadValue = Array.isArray(value) ? value.slice() : { ...value };\n      const path = this.joinPathWithPropertyPath(event);\n      nextState = setValue(nextState, path, payloadValue);\n    }\n\n    if (type === ResetForm.type) {\n      const model = getValue(nextState, `${event.payload.path}.model`);\n      nextState = setValue(nextState, `${event.payload.path}`, { model: model });\n    }\n\n    if (type === UpdateFormStatus.type || type === UpdateForm.type) {\n      nextState = setValue(nextState, `${event.payload.path}.status`, event.payload.status);\n    }\n\n    if (type === UpdateFormErrors.type || type === UpdateForm.type) {\n      nextState = setValue(nextState, `${event.payload.path}.errors`, {\n        ...event.payload.errors\n      });\n    }\n\n    if (type === UpdateFormDirty.type || type === UpdateForm.type) {\n      nextState = setValue(nextState, `${event.payload.path}.dirty`, event.payload.dirty);\n    }\n\n    if (type === SetFormDirty.type) {\n      nextState = setValue(nextState, `${event.payload}.dirty`, true);\n    }\n\n    if (type === SetFormPristine.type) {\n      nextState = setValue(nextState, `${event.payload}.dirty`, false);\n    }\n\n    if (type === SetFormDisabled.type) {\n      nextState = setValue(nextState, `${event.payload}.disabled`, true);\n    }\n\n    if (type === SetFormEnabled.type) {\n      nextState = setValue(nextState, `${event.payload}.disabled`, false);\n    }\n\n    return next(nextState, event);\n  }\n\n  private joinPathWithPropertyPath({ payload }: UpdateFormValue): string {\n    let path = `${payload.path}.model`;\n\n    if (payload.propertyPath) {\n      path += `.${payload.propertyPath}`;\n    }\n\n    return path;\n  }\n}\n","import { ChangeDetectorRef, Directive, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormGroup, FormGroupDirective } from '@angular/forms';\nimport { Actions, getValue, ofActionDispatched, Store } from '@ngxs/store';\nimport { Observable, Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, filter, takeUntil } from 'rxjs/operators';\nimport {\n  ResetForm,\n  UpdateForm,\n  UpdateFormDirty,\n  UpdateFormErrors,\n  UpdateFormStatus,\n  UpdateFormValue\n} from './actions';\n\n@Directive({ selector: '[ngxsForm]' })\nexport class FormDirective implements OnInit, OnDestroy {\n  @Input('ngxsForm')\n  path: string = null!;\n\n  @Input('ngxsFormDebounce')\n  debounce = 100;\n\n  @Input('ngxsFormClearOnDestroy')\n  clearDestroy = false;\n\n  private readonly _destroy$ = new Subject<void>();\n  private _updating = false;\n\n  constructor(\n    private _actions$: Actions,\n    private _store: Store,\n    private _formGroupDirective: FormGroupDirective,\n    private _cd: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    this._actions$\n      .pipe(\n        ofActionDispatched(ResetForm),\n        filter((action: ResetForm) => action.payload.path === this.path),\n        takeUntil(this._destroy$)\n      )\n      .subscribe(({ payload: { value } }: ResetForm) => {\n        this.form.reset(value);\n        this.updateFormStateWithRawValue(true);\n        this._cd.markForCheck();\n      });\n\n    this.getStateStream(`${this.path}.model`).subscribe(model => {\n      if (this._updating || !model) {\n        return;\n      }\n\n      this.form.patchValue(model);\n      this._cd.markForCheck();\n    });\n\n    this.getStateStream(`${this.path}.dirty`).subscribe(dirty => {\n      if (this.form.dirty === dirty || typeof dirty !== 'boolean') {\n        return;\n      }\n\n      if (dirty) {\n        this.form.markAsDirty();\n      } else {\n        this.form.markAsPristine();\n      }\n\n      this._cd.markForCheck();\n    });\n\n    // On first state change, sync form model, status and dirty with state\n    this._store\n      .selectOnce(state => getValue(state, this.path))\n      .subscribe(() => {\n        this._store.dispatch([\n          new UpdateFormValue({\n            path: this.path,\n            value: this.form.getRawValue()\n          }),\n          new UpdateFormStatus({\n            path: this.path,\n            status: this.form.status\n          }),\n          new UpdateFormDirty({\n            path: this.path,\n            dirty: this.form.dirty\n          })\n        ]);\n      });\n\n    this.getStateStream(`${this.path}.disabled`).subscribe(disabled => {\n      if (this.form.disabled === disabled || typeof disabled !== 'boolean') {\n        return;\n      }\n\n      if (disabled) {\n        this.form.disable();\n      } else {\n        this.form.enable();\n      }\n\n      this._cd.markForCheck();\n    });\n\n    this._formGroupDirective.valueChanges!.pipe(this.debounceChange()).subscribe(() => {\n      this.updateFormStateWithRawValue();\n    });\n\n    this._formGroupDirective\n      .statusChanges!.pipe(distinctUntilChanged(), this.debounceChange())\n      .subscribe((status: string) => {\n        this._store.dispatch(\n          new UpdateFormStatus({\n            status,\n            path: this.path\n          })\n        );\n      });\n  }\n\n  updateFormStateWithRawValue(withFormStatus?: boolean) {\n    if (this._updating) return;\n\n    const value = this._formGroupDirective.control.getRawValue();\n\n    const actions: any[] = [\n      new UpdateFormValue({\n        path: this.path,\n        value\n      }),\n      new UpdateFormDirty({\n        path: this.path,\n        dirty: this._formGroupDirective.dirty\n      }),\n      new UpdateFormErrors({\n        path: this.path,\n        errors: this._formGroupDirective.errors\n      })\n    ];\n\n    if (withFormStatus) {\n      actions.push(\n        new UpdateFormStatus({\n          path: this.path,\n          status: this._formGroupDirective.status\n        })\n      );\n    }\n\n    this._updating = true;\n    this._store.dispatch(actions).subscribe({\n      error: () => (this._updating = false),\n      complete: () => (this._updating = false)\n    });\n  }\n  ngOnDestroy() {\n    this._destroy$.next();\n    this._destroy$.complete();\n\n    if (this.clearDestroy) {\n      this._store.dispatch(\n        new UpdateForm({\n          path: this.path,\n          value: null,\n          dirty: null,\n          status: null,\n          errors: null\n        })\n      );\n    }\n  }\n\n  private debounceChange() {\n    const skipDebounceTime =\n      this._formGroupDirective.control.updateOn !== 'change' || this.debounce < 0;\n\n    return skipDebounceTime\n      ? (change: Observable<any>) => change.pipe(takeUntil(this._destroy$))\n      : (change: Observable<any>) =>\n          change.pipe(debounceTime(this.debounce), takeUntil(this._destroy$));\n  }\n\n  private get form(): FormGroup {\n    return this._formGroupDirective.form;\n  }\n\n  private getStateStream(path: string) {\n    return this._store.select(state => getValue(state, path)).pipe(takeUntil(this._destroy$));\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { NGXS_PLUGINS } from '@ngxs/store';\nimport { NgxsFormPlugin } from './form.plugin';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormDirective } from './directive';\n\n@NgModule({\n  imports: [ReactiveFormsModule],\n  declarations: [FormDirective],\n  exports: [FormDirective]\n})\nexport class NgxsFormPluginModule {\n  static forRoot(): ModuleWithProviders<NgxsFormPluginModule> {\n    return {\n      ngModule: NgxsFormPluginModule,\n      providers: [\n        {\n          provide: NGXS_PLUGINS,\n          useClass: NgxsFormPlugin,\n          multi: true\n        }\n      ]\n    };\n  }\n}\n"],"names":["getActionTypeFromInstance","setValue","getValue","Injectable","Subject","ofActionDispatched","filter","takeUntil","distinctUntilChanged","debounceTime","Directive","Actions","Store","FormGroupDirective","ChangeDetectorRef","Input","NGXS_PLUGINS","NgModule","ReactiveFormsModule"],"mappings":"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"}