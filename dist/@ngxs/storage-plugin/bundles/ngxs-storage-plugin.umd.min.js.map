{"version":3,"sources":["../../../../packages/storage-plugin/src/symbols.ts","../../../../node_modules/tslib/tslib.es6.js","../../../../packages/storage-plugin/src/internals.ts","../../../../packages/storage-plugin/src/storage.plugin.ts","../../../../packages/storage-plugin/src/storage.module.ts"],"names":["NGXS_STORAGE_PLUGIN_OPTIONS","InjectionToken","STORAGE_ENGINE","__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","storageOptionsFactory","options","key","undefined","Array","isArray","map","token","StateToken","getName","name","Object","assign","storage","serialize","JSON","stringify","deserialize","parse","beforeSerialize","obj","afterDeserialize","engineFactory","platformId","isPlatformServer","localStorage","sessionStorage","NgxsStoragePlugin","_options","_engine","_platformId","this","prototype","handle","state","event","_this","keys","matches","actionMatcher","isInitAction","InitState","UpdateState","hasMigration","isMaster","val","this_1","getItem","newVal","e","console","error","migrations","forEach","strategy","versionMatch","version","getValue","versionKey","keyMatch","migrate","setValue","keys_1","keys_1_1","pipe","tap","nextState","keys_2","keys_2_1","setItem","Injectable","Inject","args","PLATFORM_ID","USER_OPTIONS","NgxsStoragePluginModule","forRoot","ngModule","providers","provide","NGXS_PLUGINS","useClass","multi","useValue","useFactory","deps","NgModule"],"mappings":"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","sourcesContent":["import { InjectionToken } from '@angular/core';\n\nimport { StorageKey } from './internals';\n\nexport const enum StorageOption {\n  LocalStorage,\n  SessionStorage\n}\n\nexport interface NgxsStoragePluginOptions {\n  /**\n   * Key for the state slice to store in the storage engine.\n   */\n  key?: undefined | StorageKey;\n\n  /**\n   * Storage engine to use. Deaults to localStorage but can provide\n   *\n   * sessionStorage or custom implementation of the StorageEngine interface\n   */\n  storage?: StorageOption;\n\n  /**\n   * Migration strategies.\n   */\n  migrations?: {\n    /**\n     * Version to key off.\n     */\n    version: number | string;\n\n    /**\n     * Method to migrate the previous state.\n     */\n    migrate: (state: any) => any;\n\n    /**\n     * Key to migrate.\n     */\n    key?: string;\n\n    /**\n     * Key for the version. Defaults to 'version'.\n     */\n    versionKey?: string;\n  }[];\n\n  /**\n   * Serailizer for the object before its pushed into the engine.\n   */\n  serialize?(obj: any): string;\n\n  /**\n   * Deserializer for the object before its pulled out of the engine.\n   */\n  deserialize?(obj: any): any;\n\n  /**\n   * Method to alter object before serialization.\n   */\n  beforeSerialize?(obj: any, key: string): any;\n\n  /**\n   * Method to alter object after deserialization.\n   */\n  afterDeserialize?(obj: any, key: string): any;\n}\n\nexport const NGXS_STORAGE_PLUGIN_OPTIONS = new InjectionToken('NGXS_STORAGE_PLUGIN_OPTION');\n\nexport const STORAGE_ENGINE = new InjectionToken('STORAGE_ENGINE');\n\nexport interface StorageEngine {\n  readonly length: number;\n  getItem(key: string): any;\n  setItem(key: string, val: any): void;\n  removeItem(key: string): void;\n  clear(): void;\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { isPlatformServer } from '@angular/common';\nimport { StateClass } from '@ngxs/store/internals';\nimport { StateToken } from '@ngxs/store';\n\nimport { StorageOption, StorageEngine, NgxsStoragePluginOptions } from './symbols';\n\n/**\n * If the `key` option is not provided then the below constant\n * will be used as a default key\n */\nexport const DEFAULT_STATE_KEY = '@@STATE';\n\n/**\n * Internal type definition for the `key` option provided\n * in the `forRoot` method when importing module\n */\nexport type StorageKey =\n  | string\n  | StateClass\n  | StateToken<any>\n  | (string | StateClass | StateToken<any>)[];\n\n/**\n * This key is used to retrieve static metadatas on state classes.\n * This constant is taken from the core codebase\n */\nconst META_OPTIONS_KEY = 'NGXS_OPTIONS_META';\n\nfunction transformKeyOption(key: StorageKey): string[] {\n  if (!Array.isArray(key)) {\n    key = [key];\n  }\n\n  return key.map((token: string | StateClass | StateToken<any>) => {\n    if (typeof token === 'string') {\n      return token;\n    } else if (token instanceof StateToken) {\n      return token.getName();\n    }\n\n    const options = (token as any)[META_OPTIONS_KEY];\n    return options.name;\n  });\n}\n\nexport function storageOptionsFactory(\n  options: NgxsStoragePluginOptions | undefined\n): NgxsStoragePluginOptions {\n  if (options !== undefined && options.key) {\n    options.key = transformKeyOption(options.key);\n  }\n\n  return {\n    key: [DEFAULT_STATE_KEY],\n    storage: StorageOption.LocalStorage,\n    serialize: JSON.stringify,\n    deserialize: JSON.parse,\n    beforeSerialize: obj => obj,\n    afterDeserialize: obj => obj,\n    ...options\n  };\n}\n\nexport function engineFactory(\n  options: NgxsStoragePluginOptions,\n  platformId: string\n): StorageEngine | null {\n  if (isPlatformServer(platformId)) {\n    return null;\n  }\n\n  if (options.storage === StorageOption.LocalStorage) {\n    return localStorage;\n  } else if (options.storage === StorageOption.SessionStorage) {\n    return sessionStorage;\n  }\n\n  return null;\n}\n","import { PLATFORM_ID, Inject, Injectable } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport {\n  NgxsPlugin,\n  setValue,\n  getValue,\n  InitState,\n  UpdateState,\n  actionMatcher,\n  NgxsNextPluginFn\n} from '@ngxs/store';\nimport { tap } from 'rxjs/operators';\n\nimport {\n  StorageEngine,\n  NgxsStoragePluginOptions,\n  STORAGE_ENGINE,\n  NGXS_STORAGE_PLUGIN_OPTIONS\n} from './symbols';\nimport { DEFAULT_STATE_KEY } from './internals';\n\n@Injectable()\nexport class NgxsStoragePlugin implements NgxsPlugin {\n  constructor(\n    @Inject(NGXS_STORAGE_PLUGIN_OPTIONS) private _options: NgxsStoragePluginOptions,\n    @Inject(STORAGE_ENGINE) private _engine: StorageEngine,\n    @Inject(PLATFORM_ID) private _platformId: string\n  ) {}\n\n  handle(state: any, event: any, next: NgxsNextPluginFn) {\n    if (isPlatformServer(this._platformId) && this._engine === null) {\n      return next(state, event);\n    }\n\n    // We cast to `string[]` here as we're sure that this option has been\n    // transformed by the `storageOptionsFactory` function that provided token\n    const keys = this._options.key as string[];\n    const matches = actionMatcher(event);\n    const isInitAction = matches(InitState) || matches(UpdateState);\n    let hasMigration = false;\n\n    if (isInitAction) {\n      for (const key of keys) {\n        const isMaster = key === DEFAULT_STATE_KEY;\n        let val: any = this._engine.getItem(key!);\n\n        if (val !== 'undefined' && typeof val !== 'undefined' && val !== null) {\n          try {\n            const newVal = this._options.deserialize!(val);\n            val = this._options.afterDeserialize!(newVal, key);\n          } catch (e) {\n            console.error(\n              'Error ocurred while deserializing the store value, falling back to empty object.'\n            );\n            val = {};\n          }\n\n          if (this._options.migrations) {\n            this._options.migrations.forEach(strategy => {\n              const versionMatch =\n                strategy.version === getValue(val, strategy.versionKey || 'version');\n              const keyMatch = (!strategy.key && isMaster) || strategy.key === key;\n              if (versionMatch && keyMatch) {\n                val = strategy.migrate(val);\n                hasMigration = true;\n              }\n            });\n          }\n\n          if (!isMaster) {\n            state = setValue(state, key!, val);\n          } else {\n            state = { ...state, ...val };\n          }\n        }\n      }\n    }\n\n    return next(state, event).pipe(\n      tap(nextState => {\n        if (!isInitAction || (isInitAction && hasMigration)) {\n          for (const key of keys) {\n            let val = nextState;\n\n            if (key !== DEFAULT_STATE_KEY) {\n              val = getValue(nextState, key!);\n            }\n\n            try {\n              const newVal = this._options.beforeSerialize!(val, key);\n              this._engine.setItem(key!, this._options.serialize!(newVal));\n            } catch (e) {\n              console.error(\n                'Error ocurred while serializing the store value, value not updated.'\n              );\n            }\n          }\n        }\n      })\n    );\n  }\n}\n","import { NgModule, ModuleWithProviders, PLATFORM_ID, InjectionToken } from '@angular/core';\nimport { NGXS_PLUGINS } from '@ngxs/store';\n\nimport {\n  NgxsStoragePluginOptions,\n  STORAGE_ENGINE,\n  NGXS_STORAGE_PLUGIN_OPTIONS\n} from './symbols';\nimport { NgxsStoragePlugin } from './storage.plugin';\nimport { storageOptionsFactory, engineFactory } from './internals';\n\nexport const USER_OPTIONS = new InjectionToken('USER_OPTIONS');\n\n@NgModule()\nexport class NgxsStoragePluginModule {\n  static forRoot(\n    options?: NgxsStoragePluginOptions\n  ): ModuleWithProviders<NgxsStoragePluginModule> {\n    return {\n      ngModule: NgxsStoragePluginModule,\n      providers: [\n        {\n          provide: NGXS_PLUGINS,\n          useClass: NgxsStoragePlugin,\n          multi: true\n        },\n        {\n          provide: USER_OPTIONS,\n          useValue: options\n        },\n        {\n          provide: NGXS_STORAGE_PLUGIN_OPTIONS,\n          useFactory: storageOptionsFactory,\n          deps: [USER_OPTIONS]\n        },\n        {\n          provide: STORAGE_ENGINE,\n          useFactory: engineFactory,\n          deps: [NGXS_STORAGE_PLUGIN_OPTIONS, PLATFORM_ID]\n        }\n      ]\n    };\n  }\n}\n"]}