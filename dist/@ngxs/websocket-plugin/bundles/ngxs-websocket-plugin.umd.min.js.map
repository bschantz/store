{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","../../../../packages/websocket-plugin/src/symbols.ts","../../../../packages/websocket-plugin/src/websocket-handler.ts","../../../../packages/websocket-plugin/src/websocket.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","NGXS_WEBSOCKET_OPTIONS","InjectionToken","noop","_args","_i","arguments","length","ConnectWebSocket","payload","this","defineProperty","WebsocketMessageError","DisconnectWebSocket","WebSocketConnected","WebSocketDisconnected","SendWebSocketMessage","WebSocketConnectionUpdated","TypeKeyPropertyMissingError","_super","typeKey","call","__","constructor","prototype","create","__extends","Error","WebSocketHandler","store","actions$","options","_this","socket","config","url","protocol","binaryType","serializer","deserializer","closeObserver","next","disconnect","openObserver","dispatch","setupActionsListeners","pipe","ofActionDispatched","subscribe","_a","connect","send","updateConnection","mergeConfigWithOptions","WebSocketSubject","message","type","getValue","assign","error","CloseEvent","dispatchWebSocketDisconnected","complete","data","websocketOptionsFactory","reconnectInterval","reconnectAttempts","e","JSON","parse","value","stringify","Injectable","Store","Actions","Inject","args","USER_OPTIONS","NgxsWebsocketPluginModule","forRoot","ngModule","providers","provide","useValue","useFactory","deps","APP_INITIALIZER","multi","NgModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { InjectionToken } from '@angular/core';\n\nexport const NGXS_WEBSOCKET_OPTIONS = new InjectionToken('NGXS_WEBSOCKET_OPTIONS');\n\nexport interface NgxsWebsocketPluginOptions {\n  /**\n   * URL of the websocket.\n   */\n  url?: string;\n\n  /**\n   * Either a single protocol string or an array of protocol strings.\n   * These strings are used to indicate sub-protocols, so that a single server\n   * can implement multiple WebSocket sub-protocols (for example, you might want one server to be able\n   * to handle different types of interactions depending on the specified protocol).\n   * If you don't specify a protocol string, an empty string is assumed.\n   */\n  protocol?: string | string[];\n\n  /**\n   * Sets the `binaryType` property of the underlying WebSocket.\n   */\n  binaryType?: 'blob' | 'arraybuffer';\n\n  /**\n   * The property name to distigunish this type for the store.\n   * Default: 'type'\n   */\n  typeKey?: string;\n\n  /**\n   * Interval to try and reconnect.\n   * Default: 5000\n   */\n  reconnectInterval?: number;\n\n  /**\n   * Number of reconnect attemps.\n   * Default: 10\n   */\n  reconnectAttempts?: number;\n\n  /**\n   * Serializer to call before sending messages\n   * Default: `json.stringify`\n   */\n  serializer?: (data: any) => string;\n\n  /**\n   * Deseralizer before publishing the message.\n   */\n  deserializer?: (e: MessageEvent) => any;\n}\n\nexport function noop(..._args: any[]) {\n  return function() {};\n}\n\n/**\n * Action to connect to the websocket. Optionally pass a URL.\n */\nexport class ConnectWebSocket {\n  static get type() {\n    // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\n    return '[WebSocket] Connect';\n  }\n  constructor(public payload?: NgxsWebsocketPluginOptions) {}\n}\n\n/**\n * Action triggered when a error ocurrs\n */\nexport class WebsocketMessageError {\n  static get type() {\n    // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\n    return '[WebSocket] Message Error';\n  }\n  constructor(public payload: any) {}\n}\n\n/**\n * Action to disconnect the websocket.\n */\nexport class DisconnectWebSocket {\n  static get type() {\n    // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\n    return '[WebSocket] Disconnect';\n  }\n}\n\n/**\n * Action triggered when websocket is connected\n */\nexport class WebSocketConnected {\n  static get type() {\n    return '[WebSocket] Connected';\n  }\n}\n\n/**\n * Action triggered when websocket is disconnected\n */\nexport class WebSocketDisconnected {\n  static get type() {\n    // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\n    return '[WebSocket] Disconnected';\n  }\n}\n\n/**\n * Action to send to the server.\n */\nexport class SendWebSocketMessage {\n  static get type() {\n    // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\n    return '[WebSocket] Send Message';\n  }\n  constructor(public payload: any) {}\n}\n\n/**\n * Action dispatched when the user tries to connect if the connection already exists.\n */\nexport class WebSocketConnectionUpdated {\n  static get type() {\n    // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\n    return '[WebSocket] Connection Updated';\n  }\n}\n\n/**\n * This error is thrown where there is no `type` (or custom `typeKey`) property\n * on the message that came from the server side socket\n */\nexport class TypeKeyPropertyMissingError extends Error {\n  constructor(typeKey: string) {\n    super(`Property ${typeKey} is missing on the socket message`);\n  }\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { Actions, Store, getValue, ofActionDispatched } from '@ngxs/store';\n\nimport { WebSocketSubject, WebSocketSubjectConfig } from 'rxjs/webSocket';\n\nimport {\n  ConnectWebSocket,\n  DisconnectWebSocket,\n  SendWebSocketMessage,\n  NGXS_WEBSOCKET_OPTIONS,\n  NgxsWebsocketPluginOptions,\n  WebsocketMessageError,\n  WebSocketDisconnected,\n  TypeKeyPropertyMissingError,\n  WebSocketConnectionUpdated,\n  WebSocketConnected\n} from './symbols';\n\n@Injectable()\nexport class WebSocketHandler {\n  private socket: WebSocketSubject<any> | null = null;\n\n  private config: WebSocketSubjectConfig<any> = {\n    url: this.options.url!,\n    protocol: this.options.protocol,\n    // Default binary type is `blob` for the global `WebSocket`\n    binaryType: this.options.binaryType,\n    serializer: this.options.serializer,\n    deserializer: this.options.deserializer,\n    closeObserver: {\n      next: () => {\n        // ATTENTION!\n        // See https://github.com/ReactiveX/rxjs/blob/master/src/internal/observable/dom/WebSocketSubject.ts#L340\n        // RxJS socket emits `onComplete` event only if `event.wasClean` is truthy\n        // and doesn't complete socket subject if it's falsy\n        this.disconnect();\n      }\n    },\n    openObserver: {\n      next: () => this.store.dispatch(new WebSocketConnected())\n    }\n  };\n\n  private typeKey = this.options.typeKey!;\n\n  constructor(\n    private store: Store,\n    private actions$: Actions,\n    @Inject(NGXS_WEBSOCKET_OPTIONS) private options: NgxsWebsocketPluginOptions\n  ) {\n    this.setupActionsListeners();\n  }\n\n  private setupActionsListeners(): void {\n    this.actions$.pipe(ofActionDispatched(ConnectWebSocket)).subscribe(({ payload }) => {\n      this.connect(payload);\n    });\n\n    this.actions$.pipe(ofActionDispatched(DisconnectWebSocket)).subscribe(() => {\n      this.disconnect();\n    });\n\n    this.actions$.pipe(ofActionDispatched(SendWebSocketMessage)).subscribe(({ payload }) => {\n      this.send(payload);\n    });\n  }\n\n  private connect(options?: NgxsWebsocketPluginOptions): void {\n    this.updateConnection();\n\n    // Users can pass the options in the connect method so\n    // if options aren't available at DI bootstrap they have access\n    // to pass them here\n    if (options) {\n      this.mergeConfigWithOptions(options);\n    }\n\n    this.socket = new WebSocketSubject(this.config);\n\n    this.socket.subscribe({\n      next: (message: any) => {\n        const type = getValue(message, this.typeKey);\n        if (!type) {\n          throw new TypeKeyPropertyMissingError(this.typeKey);\n        }\n        this.store.dispatch({ ...message, type });\n      },\n      error: (error: any) => {\n        if (error instanceof CloseEvent) {\n          this.dispatchWebSocketDisconnected();\n        } else {\n          this.store.dispatch(new WebsocketMessageError(error));\n        }\n      }\n    });\n  }\n\n  private disconnect(): void {\n    if (this.socket) {\n      // `socket.complete()` closes the connection\n      // also it doesn't invoke the `onComplete` callback that we passed\n      // into `socket.subscribe(...)`\n      this.socket.complete();\n      this.socket = null;\n      this.dispatchWebSocketDisconnected();\n    }\n  }\n\n  private send(data: any): void {\n    if (!this.socket) {\n      throw new Error('You must connect to the socket before sending any data');\n    }\n\n    this.socket.next(data);\n  }\n\n  /**\n   * Don't enlarge the `connect` method\n   */\n  private mergeConfigWithOptions(options: NgxsWebsocketPluginOptions): void {\n    if (options.url) {\n      this.config.url = options.url;\n    }\n\n    if (options.serializer) {\n      this.config.serializer = options.serializer;\n    }\n\n    if (options.deserializer) {\n      this.config.deserializer = options.deserializer;\n    }\n  }\n\n  /**\n   * To ensure we don't have any memory leaks\n   * e.g. if the user occasionally dispatched `ConnectWebSocket` twice\n   * then the previous subscription will still live in the memory\n   * to prevent such behavior - we close the previous connection if it exists\n   */\n  private updateConnection(): void {\n    if (this.socket) {\n      this.socket.complete();\n      this.socket = null;\n      this.store.dispatch(new WebSocketConnectionUpdated());\n    }\n  }\n\n  /**\n   * Used in many places so it's better to move the code into function\n   */\n  private dispatchWebSocketDisconnected(): void {\n    this.store.dispatch(new WebSocketDisconnected());\n  }\n}\n","import { NgModule, ModuleWithProviders, APP_INITIALIZER, InjectionToken } from '@angular/core';\n\nimport { WebSocketHandler } from './websocket-handler';\nimport { NgxsWebsocketPluginOptions, NGXS_WEBSOCKET_OPTIONS, noop } from './symbols';\n\nexport function websocketOptionsFactory(options: NgxsWebsocketPluginOptions) {\n  return {\n    reconnectInterval: 5000,\n    reconnectAttempts: 10,\n    typeKey: 'type',\n    deserializer(e: MessageEvent) {\n      return JSON.parse(e.data);\n    },\n    serializer(value: any) {\n      return JSON.stringify(value);\n    },\n    ...options\n  };\n}\n\nexport const USER_OPTIONS = new InjectionToken('USER_OPTIONS');\n\n@NgModule()\nexport class NgxsWebsocketPluginModule {\n  static forRoot(\n    options?: NgxsWebsocketPluginOptions\n  ): ModuleWithProviders<NgxsWebsocketPluginModule> {\n    return {\n      ngModule: NgxsWebsocketPluginModule,\n      providers: [\n        WebSocketHandler,\n        {\n          provide: USER_OPTIONS,\n          useValue: options\n        },\n        {\n          provide: NGXS_WEBSOCKET_OPTIONS,\n          useFactory: websocketOptionsFactory,\n          deps: [USER_OPTIONS]\n        },\n        {\n          provide: APP_INITIALIZER,\n          useFactory: noop,\n          deps: [WebSocketHandler],\n          multi: true\n        }\n      ]\n    };\n  }\n}\n"]}